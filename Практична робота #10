fn rotate(s: String, n: isize) -> String {
    let len = s.len() as isize;
    let shift = (n % len + len) % len; // Обчислення зсуву з врахуванням негативних значень
    let split = shift as usize;
    
    // Обрізаємо рядок на дві частини і міняємо їх місцями
    format!("{}{}", &s[split..], &s[..split])
}

#[test]
fn test() {
    let s = "abcdefgh".to_string();
    let shifts = [
        (0, "abcdefgh"),
        (8, "abcdefgh"),
        (-8, "abcdefgh"),
        (1, "habcdefg"),
        (2, "ghabcdef"),
        (10, "ghabcdef"),
        (-1, "bcdefgha"),
        (-2, "cdefghab"),
        (-10, "cdefghab"),
    ];

    shifts.iter().for_each(|(n, exp)| {
        assert_eq!(rotate(s.clone(), *n), exp.to_string());
    });
}

fn main() {
    let s = "abcdefgh".to_string();
    let n = 3;
    let result = rotate(s.clone(), n);
    println!("Result of rotating '{}': {}", s, result);
}
