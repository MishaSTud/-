use rand::Rng;


fn genrandom_vector(n: usize) -> Vec<i32> {
    let mut rng = rand::thread_rng();
    (0..n).map(|| rng.gen_range(10..100)).collect()
}


fn min_adjacent_sum(data: &[i32]) -> Option<i32> {
    if data.len() < 2 {
        return None; 
    }

    let mut min_sum = i32::MAX;
    for i in 0..data.len() - 1 {
        let sum = data[i] + data[i + 1];
        if sum < min_sum {
            min_sum = sum;
        }
    }
    Some(min_sum)
}


fn print_vector(data: &[i32]) {
    println!("Вектор: {:?}", data);
}

fn main() {
   
    let random_vector = gen_random_vector(20);

    
    print_vector(&random_vector);

    
    match min_adjacent_sum(&random_vector) {
        Some(min_sum) => println!("Мінімальна сума сусідніх елементів: {}", min_sum),
        None => println!("У векторі недостатньо елементів для обчислення"),
    }
}
